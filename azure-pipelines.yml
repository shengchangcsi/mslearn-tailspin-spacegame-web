trigger:
- '*'

pool:
  vmImage: 'ubuntu-18.04'
  demands:
  - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.300'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true

- script: "echo  build.sourceBranch: variables['build.sourceBranch'],----- build.sourceBranch: $(build.sourceBranch),----- Build.SourceBranch: $(Build.SourceBranch), Build.Reason: $(Build.Reason), Agent.BuildDirectory: $(Agent.BuildDirectory), Pipeline.Workspace: $(Pipeline.Workspace), System.HostType: $(System.HostType), System.PullRequest.IsFork: $(System.PullRequest.IsFork), System.PullRequest.PullRequestId: $(System.PullRequest.PullRequestId), System.PullRequest.PullRequestNumber: $(System.PullRequest.PullRequestNumber), System.PullRequest.TargetBranch: $(System.PullRequest.TargetBranch), System.TeamProject: $(System.TeamProject)"
  displayName: 'Write a little predefined variables'
  workingDirectory: $(wwwrootDir)

- task: WhiteSource Bolt@20
  displayName: '1st Run WhiteSource Bolt'
  condition: |
    and
    (
      succeeded(),
      eq(variables['Build.Reason'], 'PullRequest'),
      eq(variables['System.PullRequest.TargetBranch'], 'master')
    )

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()
